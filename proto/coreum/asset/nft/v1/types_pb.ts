// @generated by protoc-gen-es v1.5.0 with parameter "target=ts"
// @generated from file coreum/asset/nft/v1/types.proto (package coreum.asset.nft.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message coreum.asset.nft.v1.DataBytes
 */
export class DataBytes extends Message<DataBytes> {
  /**
   * @generated from field: bytes Data = 1;
   */
  Data = new Uint8Array(0);

  constructor(data?: PartialMessage<DataBytes>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.asset.nft.v1.DataBytes";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataBytes {
    return new DataBytes().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataBytes {
    return new DataBytes().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataBytes {
    return new DataBytes().fromJsonString(jsonString, options);
  }

  static equals(a: DataBytes | PlainMessage<DataBytes> | undefined, b: DataBytes | PlainMessage<DataBytes> | undefined): boolean {
    return proto3.util.equals(DataBytes, a, b);
  }
}

